"""
Django settings for todo project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q4qfsbvn$&(!uaet4z()y$sqw!)eb+sx)7_p_o)a)&9zcetku*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

<<<<<<< ./todo/todo/settings_LOCAL_6387.py
ALLOWED_HOSTS = ['127.0.0.1',]
||||||| ./todo/todo/settings_BASE_6387.py
ALLOWED_HOSTS = []
=======
ALLOWED_HOSTS = []
>>>>>>> ./todo/todo/settings_REMOTE_6387.py


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'todo_list',
    'app_user',
    'crispy_forms',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'todo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'todo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/

<<<<<<< ./todo/todo/settings_LOCAL_6387.py
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
||||||| ./todo/todo/settings_BASE_6387.py
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
=======
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
>>>>>>> ./todo/todo/settings_REMOTE_6387.py

STATIC_URL = '/static/'
STATIC_ROOT = 'staticfiles'

LOGIN_REDIRECT_URL = "welcome"
<<<<<<< ./todo/todo/settings_LOCAL_6387.py
LOGOUT_REDIRECT_URL = "user_home"
||||||| ./todo/todo/settings_BASE_6387.py
LOGOUT_REDIRECT_URL = "user_login"
=======
LOGOUT_REDIRECT_URL = "user_home"
>>>>>>> ./todo/todo/settings_REMOTE_6387.py
LOGIN_URL = "user_login"
CRISPY_TEMPLATE_PACK = 'bootstrap3'


<<<<<<< ./todo/todo/settings_LOCAL_6387.py
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)
||||||| ./todo/todo/settings_BASE_6387.py
import dj_database_url 
prod_db  =  dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(prod_db)
=======
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)
>>>>>>> ./todo/todo/settings_REMOTE_6387.py

<<<<<<< ./todo/todo/settings_LOCAL_6387.py

SITE_ID = 1
#import dj_database_url 
#prod_db  =  dj_database_url.config(conn_max_age=500)
#DATABASES['default'].update(prod_db)

#ALLOWED_HOSTS = ['https://todo-box.herokuapp.com', 'https://git.heroku.com/todo-box.git', 'fbf24d82.ngrok.io', '127.0.0.1']
||||||| ./todo/todo/settings_BASE_6387.py
ALLOWED_HOSTS = ['https://todo-box.herokuapp.com', 'https://git.heroku.com/todo-box.git']
=======

SITE_ID = 1
#import dj_database_url 
#prod_db  =  dj_database_url.config(conn_max_age=500)
#DATABASES['default'].update(prod_db)
>>>>>>> ./todo/todo/settings_REMOTE_6387.py
